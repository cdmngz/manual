{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{362:function(a,e,s){\"use strict\";s.r(e);var t=s(42),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"primeros-pasos\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#primeros-pasos\"}},[a._v(\"#\")]),a._v(\" Primeros pasos\")]),a._v(\" \"),s(\"p\",[a._v(\"Esta sección busca explicar de manera simple, por lo tanto escapando algunos detalles técnicos, para dejar tu computadora lista para empezar a trabajar en un proyecto.\")]),a._v(\" \"),s(\"h2\",{attrs:{id:\"preparando-entorno-de-trabajo\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#preparando-entorno-de-trabajo\"}},[a._v(\"#\")]),a._v(\" Preparando entorno de trabajo\")]),a._v(\" \"),s(\"p\",[a._v(\"Más allá de los permisos de accesos y cuentas mails que se deben habilitar en el proceso. Se puede ir realizando la configuración del entorno de trabajo, instalar las herramientas necesarias, realizar algunas pruebas y tener todo preparado para ese momento.\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"instalar-gnu-linux\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#instalar-gnu-linux\"}},[a._v(\"#\")]),a._v(\" Instalar GNU/Linux\")]),a._v(\" \"),s(\"p\",[a._v(\"Para este proyecto procederemos a preparar nuestro entorno bajo un SO GNU/Linux, lo haremos partiendo desde una laptop con SO Windows.\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"crear-particion\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#crear-particion\"}},[a._v(\"#\")]),a._v(\" Crear Partición\")]),a._v(\" \"),s(\"p\",[a._v('Por lo general trea una herramienta llamada \"Crear Partición\", desde inicio-buscar la podremos conseguir, una vez encontrada la abrimos, nos aparece nuestro disco con sus distintas particiones, la idea es asignar una parte grande a un espacio vacío para ahí instalar GNU/Linux. Le damos a crear partición, con una de 100GB es suficiente.')]),a._v(\" \"),s(\"h3\",{attrs:{id:\"usb-ejecutable\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#usb-ejecutable\"}},[a._v(\"#\")]),a._v(\" USB ejecutable\")]),a._v(\" \"),s(\"p\",[a._v(\"Procedemos a descargarnos alguna imagen GNU/Linux (Debian, Ubuntu, etc...).\")]),a._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://neon.kde.org/download\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Descargar SO KDE Neon for Developers\"),s(\"OutboundLink\")],1)]),a._v(\" \"),s(\"p\",[a._v(\"Ahora descargamos rufus, app para montar la imagen .iso en el USB y volverlo booteable.\")]),a._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://rufus.ie/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Descargar rufus\"),s(\"OutboundLink\")],1)]),a._v(\" \"),s(\"h3\",{attrs:{id:\"instalar-so\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#instalar-so\"}},[a._v(\"#\")]),a._v(\" Instalar SO\")]),a._v(\" \"),s(\"p\",[a._v(\"Reiniciamos la compu.\\nPor lo general con f2, f8 entramos al menú de booteo donde configuramos que el equipo inicie leyendo el PenDrive antes que el Disco.\\nLe damos a instalar SO, preferiblemente con cable ethernet conectado.\\nSeleccionamos idioma, zona horaria, teclado.\\nEn la partición creada desde Windows procedemos a instalar el SO, por lo general se crean 3 particiones dentro de la vacía:\")]),a._v(\" \"),s(\"ul\",[s(\"li\",[a._v('Una de 1GB para el \"área de intercambio\".')]),a._v(\" \"),s(\"li\",[a._v('Otra de 20GB para los archivos de sistema (\"/\", ext4).')]),a._v(\" \"),s(\"li\",[a._v('El resto para los archivos del usuario (\"/home\", ext4).\\nSe deben ver las 3 nuevas que creamos. Siguiente.\\nLe asignamos el nombre a la compu, usario y clave.\\nAl finalinalizar te pedirá que saques el pendrive y se reiniciará.')])]),a._v(\" \"),s(\"h2\",{attrs:{id:\"instalar-python\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#instalar-python\"}},[a._v(\"#\")]),a._v(\" Instalar Python\")]),a._v(\" \"),s(\"p\",[a._v(\"Para poder desplegar varias funciones de google cloud y ejecutar el backend, tendremos que tener las siguientes versiones de python:\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"wget\")]),a._v(\" https://www.python.org/ftp/python/2.7.17/Python-2.7.17.tgz\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tar\")]),a._v(\" xzf Python-2.7.17.tgz\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"cd\")]),a._v(\" Python-2.7.17/\\n./configure --enable-optimizations\\npython2 --version\\n\")])])]),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"wget\")]),a._v(\" https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tgz\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tar\")]),a._v(\" xzf Python-3.8.1.tgz\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"cd\")]),a._v(\" Python-3.8.1/\\n./configure --enable-optimizations\\npython3 --version\\n\")])])]),s(\"h2\",{attrs:{id:\"crear-archivo-de-alias\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#crear-archivo-de-alias\"}},[a._v(\"#\")]),a._v(\" Crear archivo de alias\")]),a._v(\" \"),s(\"p\",[a._v(\"Para crear un archivo de alias con los comandos que más vamos a utilizar y si te acostumbras me lo agradecerás. Nos vamos a la carpeta raíz:\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"cd\")]),a._v(\" ~\\n\")])])]),s(\"p\",[a._v(\"Creamos o abrimos el archivo de los alias con vim y los especifiquemos:\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"vim\")]),a._v(\" .bash_aliases\\n\")])])]),s(\"p\",[a._v(\"Con la letra i podemos escribir, con ESC dejamos de escribir y :wq + Enter podemos guardar y salir, salir forzado es :q!\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"alias\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[a._v(\"upg\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"sudo apt-get update && sudo apt-get upgrade\"')]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"alias\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[a._v(\"db_proxy\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"cloud_sql_proxy -instances={proyecto}:{server}:{user}=tcp:{puerto}\"')]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"alias\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[a._v(\"proyecto\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"cd ~/ruta/proyecto\"')]),a._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\"alias\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token assign-left variable\"}},[a._v(\"deploy\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"fga-cli.py deploy app --env dev -- --promote\"')]),a._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"git-deploy\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-deploy\"}},[a._v(\"#\")]),a._v(\" Git & Deploy\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"deploy-en-dev\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#deploy-en-dev\"}},[a._v(\"#\")]),a._v(\" Deploy en dev\")]),a._v(\" \"),s(\"p\",[a._v(\"Creamos una rama a partir de master, por lo general comienza con dev, luego el cuarto del año en curso y un nombre (dev-Q4-informes)\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" checkout -b dev-Q4-informes\\n\")])])]),s(\"p\",[a._v(\"Verificamos que estamos en la rama creada, la dev, aquí es donde hago mis modificaciones.\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" branch\\n\")])])]),s(\"p\",[a._v(\"Verifico si tengo archivos por commitear en mi árbol local.\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" status\\n\")])])]),s(\"p\",[a._v(\"Si los hay pues los levanto a mi espacio de trabajo local. El punto hace referencia a todos los modificados.\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"add\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\".\")]),a._v(\"\\n\")])])]),s(\"p\",[a._v(\"Hago el commit a mi repositorio local, le coloco un mensaje conciso.\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" commit -m \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[a._v('\"Info contundente\"')]),a._v(\"\\n\")])])]),s(\"p\",[a._v(\"Me voy ahora a la rama master y comienzo la magia de los merge. Esto siguiendo la recete confiable de don Froylan.\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" checkout master \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" pull\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" checkout dev-Q4-avaya \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" merge master\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" branch\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" checkout master \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" merge dev-Q4-avaya \\n\"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"git\")]),a._v(\" push\\nfga-cli.py deploy app --env dev -- --promote\\n\")])])]),s(\"p\",[a._v(\"Si eres inteligente y seguiste los pasos de la guía de Juan correctamente, es decir hiciste un login a fga-cli con la cuenta ...completa@dev.bbva.com todo debe salir bien.\")]),a._v(\" \"),s(\"div\",{staticClass:\"custom-block warning\"},[s(\"p\",{staticClass:\"custom-block-title\"},[a._v(\"Problemas iniciales con fga-cli\")]),a._v(\" \"),s(\"p\",[a._v(\"Si tienes problemas para descargar el fga en linux, recuerda bajarle la seguridad ssl a tu compu, /etc/ssl/ssl_config a nivel 1... google con eso.\")])]),a._v(\" \"),s(\"h2\",{attrs:{id:\"back-local-a-bd\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#back-local-a-bd\"}},[a._v(\"#\")]),a._v(\" Back local a BD\")]),a._v(\" \"),s(\"p\",[a._v(\"Don Froyd creó una apires flask, para que con el siguiente proxy, nos podamos conectar a la BD de manera local y podamos probar funciones back.\")]),a._v(\" \"),s(\"p\",[a._v('Recomendamos fuertemente que el comando  \"db_proxy\" lo agregues a tu lista de '),s(\"a\",{attrs:{href:\"#crear-archivo-de-alias\"}},[a._v(\"alias\")]),a._v(\" en tu computadora(#Git)\")]),a._v(\" \"),s(\"div\",{staticClass:\"language-bash extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"sudo\")]),a._v(\" systemctl stop mysql.service\\n./restart.sh\\ndb_proxy\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[a._v(\".\")]),a._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"..\")]),a._v(\"/env/bin/activate\\npython runner.py\\n\")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}