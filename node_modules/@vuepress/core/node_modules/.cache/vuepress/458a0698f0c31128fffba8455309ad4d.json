{"remainingRequest":"/home/cd/Documentos/Development/manual/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/cd/Documentos/Development/manual/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/cd/Documentos/Development/manual/node_modules/vue-loader/lib/index.js??ref--1-1!/home/cd/Documentos/Development/manual/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/cd/Documentos/Development/manual/docs/README.md?vue&type=template&id=c6f5370e&","dependencies":[{"path":"/home/cd/Documentos/Development/manual/docs/README.md","mtime":1604250549567},{"path":"/home/cd/Documentos/Development/manual/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cd/Documentos/Development/manual/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/cd/Documentos/Development/manual/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cd/Documentos/Development/manual/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/cd/Documentos/Development/manual/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}